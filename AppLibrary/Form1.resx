<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>