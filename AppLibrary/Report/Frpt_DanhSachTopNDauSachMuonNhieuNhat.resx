<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPreview.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>